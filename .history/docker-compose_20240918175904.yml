version: '3.8'

services:
  node-exporter:
    image: prom/node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - selenium_net

  selenium-chrome:
    image: selenium/standalone-chrome
    restart: always
    ports:
      - "4444:4444"
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - selenium_net

  selenium-exporter:
    image: mdomke/selenium-exporter
    restart: always
    environment:
      - SELENIUM_SERVER=http://selenium-chrome:4444/wd/hub
    ports:
      - "3001:3001"
    networks:
      - selenium_net
      
  bot:
    build: .
    container_name: telegram_bot
    restart: always
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/.venv  
    depends_on:
      - selenium-chrome
      - prometheus
    environment:
      - SELENIUM_URL=${SELENIUM_URL}
      - CHROME_NO_SANDBOX=${CHROME_NO_SANDBOX}
      - CHROME_DISABLE_DEV_SHM=${CHROME_DISABLE_DEV_SHM}
    command: watchmedo auto-restart --patterns="*.py" --recursive -- python bot.py
    networks:
      - selenium_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - selenium_net

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=Cl0ud1985!
    user: "1000"
    networks:
      - selenium_net

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - selenium_net
    depends_on:
      - prometheus
      - grafana
      - selenium-chrome

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  selenium_net:
    driver: bridge

volumes:
  grafana_data: